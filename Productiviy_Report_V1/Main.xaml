<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="731,801" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="35">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="ProductivityWorkMonthlyReport" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="WorkMonthlyDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="RangeDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReadOrgDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReadDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReadExcelDT" />
      <Variable x:TypeArguments="x:Int32" Name="i" />
      <Variable x:TypeArguments="x:Int32" Name="Counter" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReadDetailsDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="SheetColumnDT" />
      <Variable x:TypeArguments="sd:DataRow" Name="Dr" />
      <Variable x:TypeArguments="sd:DataTable" Name="HeaderDT" />
      <Variable x:TypeArguments="x:Int32" Name="Month" />
      <Variable x:TypeArguments="x:String" Name="SheetName" />
      <Variable x:TypeArguments="x:Int32" Name="Year" />
      <Variable x:TypeArguments="x:Int32" Name="m" />
      <Variable x:TypeArguments="sd:DataTable" Name="ExcelDT" />
      <Variable x:TypeArguments="x:Int32" Default="2" Name="RowNo" />
      <Variable x:TypeArguments="sd:DataTable" Name="ReadSheetDT" />
      <Variable x:TypeArguments="x:Int32" Name="RowCounter" />
      <Variable x:TypeArguments="sd:DataTable" Name="BeforSortDT" />
      <Variable x:TypeArguments="sd:DataTable" Name="AfterSortDT" />
      <Variable x:TypeArguments="x:String" Name="PreviousMonthFolder" />
      <Variable x:TypeArguments="s:String[]" Name="FileList" />
      <Variable x:TypeArguments="x:String" Name="ResourceFileName" />
      <Variable x:TypeArguments="x:String" Name="FileName" />
      <Variable x:TypeArguments="x:Int32" Name="ColumnIndex" />
      <Variable x:TypeArguments="x:String" Name="ColumnName" />
      <Variable x:TypeArguments="x:Int32" Name="ColumnIndexsheet" />
      <Variable x:TypeArguments="x:String" Name="ColumnNamesheet" />
      <Variable x:TypeArguments="x:Int32" Name="ColumnIndexHr" />
      <Variable x:TypeArguments="x:String" Name="ColumnNameHr" />
      <Variable x:TypeArguments="x:String" Name="ReadCell" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID3</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,107</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,173 300,207</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_34">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="730,238" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Please Enter Month For Productivity Report (ex: 01)" Title="Month For Productivity Report">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:Int32">[Month]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="730,238" sap2010:WorkflowViewState.IdRef="InputDialog_2" IsPassword="False" Label="Please Enter Year For Productivity Report (ex: 2021)" Title="Year For Productivity Report">
          <ui:InputDialog.Result>
            <OutArgument x:TypeArguments="x:Int32">[Year]</OutArgument>
          </ui:InputDialog.Result>
        </ui:InputDialog>
        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="730,2005" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" Url="http://devsupport.calibehr.com/view/main.php">
          <ui:OpenBrowser.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,1904" sap2010:WorkflowViewState.IdRef="Sequence_25">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  login'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_5" Text="devsupport">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b5f79843-6942-45df-a3c1-d0d1db569aac" InformativeScreenshot="9d373849539b0266949f42bdfa66c485" Selector="&lt;webctrl tag='INPUT' type='text' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="tab" KeyModifiers="None" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="b5757a48-7e4b-42fb-843a-538958e95492">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  password'" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_6" Text="Abc@1234">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6fe94e01-d6b8-4602-85d7-d5ff100bb543" InformativeScreenshot="3d67b91f39402abb8f623a4ec4d1c48c" Selector="&lt;webctrl tag='INPUT' type='password' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'SPAN  loginButton_label'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="de5cc08b-9397-42a6-9652-f819b1ebbb71" InformativeScreenshot="a0acb922a43da6159c6510f21260b846" Selector="&lt;webctrl id='loginButton_label' tag='SPAN' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_2" />
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'SPAN  dijit__TreeNode_5...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f241cc6c-5343-4f6f-b626-4c6ea7101b36" InformativeScreenshot="c4e914fb54d12308a5dac33faad08122" Selector="&lt;webctrl aria-role='treeitem' tag='SPAN' aaname='Follow-up' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Delay_5" />
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'SPAN  dijit__TreeNode_1...'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="06f67d97-165b-4119-93d7-f34ff0d0b1b8" InformativeScreenshot="06d81855eeb64c06ce53b8568526e59b" Selector="&lt;webctrl aria-role='treeitem' tag='SPAN' aaname='Reports' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Click>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'DIV'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_10" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="68b652bd-3293-4000-b20b-4f2551a8e304" InformativeScreenshot="26cb0bc9ebdc1e996780bafee4bffb79" Selector="&lt;webctrl aaname='real work' parentid='reportMenuList' tag='DIV' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'DIV'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1eed8136-b8c4-43de-b08c-158fc2b81981" InformativeScreenshot="a9d3d664083963e3bd5945c988aa08ef" Selector="&lt;webctrl parentid='report2' tag='DIV' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
                <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  yearSpinner'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_7" Text="[Year.ToString]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="7d8e6e4e-aa5c-4442-81ff-57a5f5ee80cb" InformativeScreenshot="55dddb57f73dfe58dae4d48bf91a4262" Selector="&lt;webctrl aria-role='spinbutton' id='yearSpinner' tag='INPUT' type='text' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" DisplayName="Type Into 'INPUT  monthSpinner'" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="TypeInto_8" Text="[Month.ToString]">
                  <ui:TypeInto.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f248df91-b88a-42d8-9c4d-5883626b80d3" InformativeScreenshot="e3db3e673288af87f60a74a539f8035b" Selector="&lt;webctrl aria-role='spinbutton' id='monthSpinner' tag='INPUT' type='text' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:TypeInto.Target>
                </ui:TypeInto>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'SPAN'" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="73e3e082-b450-414b-88a4-d18f9f2f8f6b" InformativeScreenshot="c3f24cf7108c2f94be03d3c14a7be4a8" Selector="&lt;webctrl idx='1' parentid='reportSubmit' tag='SPAN' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                </ui:Click>
              </Sequence>
            </ActivityAction>
          </ui:OpenBrowser.Body>
        </ui:OpenBrowser>
        <Sequence DisplayName="Data Scraping" sap:VirtualizedContainerService.HintSize="730,398" sap2010:WorkflowViewState.IdRef="Sequence_27">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'TechTeamS Page'" sap:VirtualizedContainerService.HintSize="434,306" sap2010:WorkflowViewState.IdRef="BrowserScope_2" Selector="&lt;html app='chrome.exe' title='Tech Team Support' /&gt;">
            <ui:BrowserScope.Body>
              <ActivityAction x:TypeArguments="x:Object">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,198" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ExtractData DelayBetweenPagesMS="{x:Null}" NextLinkSelector="{x:Null}" ContinueOnError="True" DataTable="[WorkMonthlyDT]" DisplayName="Extract Structured Data 'TABLE'" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="ExtractData_2" MaxNumberOfResults="100" SimulateClick="True">
                    <ui:ExtractData.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fcda0876-f116-4bc4-bb33-3dcba6fbb5ce" InformativeScreenshot="fef75ae77637b41f00f1221d8b3657b9" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;table' idx='2' parentid='detailReportDiv' tag='TABLE' /&gt;" WaitForReady="COMPLETE">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                      </ui:Target>
                    </ui:ExtractData.Target>
                  </ui:ExtractData>
                </Sequence>
              </ActivityAction>
            </ui:BrowserScope.Body>
          </ui:BrowserScope>
        </Sequence>
        <Assign sap:VirtualizedContainerService.HintSize="730,60" sap2010:WorkflowViewState.IdRef="Assign_19">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[((system.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(cint(Month))).Substring(0,3) +""+ Year.ToString.Substring(2,2)).ToUpper]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[Month=1 Or Month=01]" sap:VirtualizedContainerService.HintSize="730,208" sap2010:WorkflowViewState.IdRef="If_12">
          <If.Then>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_23">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PreviousMonthFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[((system.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(cint(12))).Substring(0,3) +""+ (Year-1).ToString.Substring(2,2)).ToUpper]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[PreviousMonthFolder]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[((system.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(cint(Month-1))).Substring(0,3) +""+ Year.ToString.Substring(2,2)).ToUpper]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="730,79" sap2010:WorkflowViewState.IdRef="CreateDirectory_2" Path="[&quot;D:\Productivity Reports\&quot;+SheetName+&quot;\&quot;]" />
        <Assign sap:VirtualizedContainerService.HintSize="730,60" sap2010:WorkflowViewState.IdRef="Assign_21">
          <Assign.To>
            <OutArgument x:TypeArguments="s:String[]">[FileList]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:String[]">[System.IO.Directory.GetFiles("D:\Productivity Reports\"+PreviousMonthFolder)]</InArgument>
          </Assign.Value>
        </Assign>
        <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="730,626" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[FileList]">
          <ui:ForEach.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,492" sap2010:WorkflowViewState.IdRef="Sequence_49">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[item.ToString.Contains(&quot;Resource and Project&quot;)]" sap:VirtualizedContainerService.HintSize="484,400" sap2010:WorkflowViewState.IdRef="If_11">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_50">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap2010:Annotation.AnnotationText="Get Full Path with File Name" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_22">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[ResourceFileName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[item.ToString]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                      <Assign sap2010:Annotation.AnnotationText="Get Only Filename" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[FileName]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[item.ToString.Split("\"c).Last]</InArgument>
                        </Assign.Value>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </Assign>
                    </Sequence>
                  </If.Then>
                </If>
              </Sequence>
            </ActivityAction>
          </ui:ForEach.Body>
        </ui:ForEach>
        <ui:CopyFile ContinueOnError="{x:Null}" Destination="[&quot;D:\Productivity Reports\&quot;+SheetName+&quot;\&quot;]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="730,157" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[ResourceFileName.ToString]" />
        <If Condition="[FileName &lt;&gt;&quot;Resource and Project wise Monthly sheet.xlsx&quot;]" sap:VirtualizedContainerService.HintSize="730,312" sap2010:WorkflowViewState.IdRef="If_13">
          <If.Then>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="My.Computer.FileSystem.RenameFile(&quot;D:\Productivity Reports\&quot;+FolderName+&quot;\&quot;+FileName,&quot;Resource and Project wise Monthly sheet.xlsx&quot;)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="FolderName">[SheetName.ToString]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="FileName">[FileName]</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </If.Then>
        </If>
        <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="730,4785" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000" WorkbookPath="[&quot;D:\Productivity Reports\&quot;+SheetName+&quot;\Resource and Project wise Monthly Sheet.xlsx&quot;]">
          <ui:ExcelApplicationScope.Body>
            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="696,4676" sap2010:WorkflowViewState.IdRef="Sequence_33">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="variable1" />
                  <Variable x:TypeArguments="x:String" Name="variable2" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="654,192" sap2010:WorkflowViewState.IdRef="CommentOut_17">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_53">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelDeleteRange DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_3" Range="A1:MM3000" SheetName="Resource &amp; Project Details" ShiftCells="False" ShiftOption="ShiftUp" />
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
                <ui:ExcelReadCell Cell="A1" DisplayName="Read Cell" sap:VirtualizedContainerService.HintSize="654,59" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Resource &amp; Project Details">
                  <ui:ExcelReadCell.Result>
                    <OutArgument x:TypeArguments="x:String">[ReadCell]</OutArgument>
                  </ui:ExcelReadCell.Result>
                </ui:ExcelReadCell>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey 'Grid'" sap:VirtualizedContainerService.HintSize="654,116" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="H" KeyModifiers="Alt">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="a155a2be-2cd3-4911-b22f-4f40d8493739" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Resource and Project wise Monthly sheet - Excel (Product Activat*' /&gt;&lt;uia cls='EXCEL7' name='Resource and Project wise Monthly sheet' /&gt;&lt;uia name='Grid' /&gt;">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="654,116" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="D" KeyModifiers="None">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="26a40e43-7d65-4662-b370-08d018cd1f73">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="654,116" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="S" KeyModifiers="None">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="747f2def-e56a-48a5-b788-40718ba97a9b">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="654,116" sap2010:WorkflowViewState.IdRef="SendHotkey_6" Key="enter" KeyModifiers="None" SpecialKey="True">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="4bb6dcd1-d228-4497-ae1f-16604b5df6fc">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Send Hotkey" sap:VirtualizedContainerService.HintSize="654,116" sap2010:WorkflowViewState.IdRef="SendHotkey_7" Key="s" KeyModifiers="Ctrl">
                  <ui:SendHotkey.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="31f67c73-6a22-4b2a-ad9b-95b7754b919f">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:SendHotkey.Target>
                </ui:SendHotkey>
                <Delay Duration="00:00:03" sap:VirtualizedContainerService.HintSize="654,22" sap2010:WorkflowViewState.IdRef="Delay_4" />
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[WorkMonthlyDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="654,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_8" SheetName="Resource &amp; Project Details" StartingCell="A1" />
                <ui:ExcelWriteRange AddHeaders="False" DataTable="[WorkMonthlyDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="654,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_9" SheetName="Resource &amp; Project Details" StartingCell="A1001" />
                <ui:ExcelReadRange AddHeaders="False" DataTable="[RangeDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="654,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" Range="A1001" SheetName="Resource &amp; Project Details" />
                <ui:ExcelReadRange AddHeaders="False" DataTable="[ReadOrgDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="654,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" Range="A1" SheetName="Resource &amp; Project Details" />
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="654,229" sap2010:WorkflowViewState.IdRef="CommentOut_8">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_28">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_8" Text="[&quot;B1003:&quot;+chr(64+RangeDT.Columns.Count).ToString+(RangeDT.Rows.Count+1000).ToString]" />
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
                <Assign sap:VirtualizedContainerService.HintSize="654,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[ColumnIndex]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[RangeDT.Columns.Count]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim dividend As Integer = columnNumber&#xA;Dim columnname As String = String.Empty&#xA;Dim modulo As Integer&#xA;&#xA;While dividend &gt; 0&#xA;modulo = (dividend - 1)Mod 26&#xA;columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;dividend = CInt((dividend - modulo)/26)&#xA;End While&#xA;&#xA;Console.WriteLine(columnName.ToString)&#xA;result=columnName" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="654,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                  <ui:InvokeCode.Arguments>
                    <OutArgument x:TypeArguments="x:String" x:Key="result">[ColumnName]</OutArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="columnNumber">[ColumnIndex]</InArgument>
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Replace space h formula&#xA;&quot;CC3:CD9&quot;&#xA;&#xA;&quot;K3:&quot;+chr(64+DT1.Columns.Count).ToString+(DT1.Rows.Count+1).ToString&#xA;&#xA;&quot;B1003:&quot;+chr(64+RangeDT.Columns.Count).ToString+(RangeDT.Rows.Count+1000).ToString" Cell="[&quot;B1003:&quot;+ColumnName.ToString+(RangeDT.Rows.Count+1000).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="654,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_14" SheetName="Resource &amp; Project Details" Text="=LEFT(B3, LEN(B3)-2)">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteCell>
                <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="&quot;CC3:CD9&quot;" DataTable="[ReadDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="654,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_10" PreserveFormat="True" Range="B1003" SheetName="Resource &amp; Project Details">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelReadRange>
                <ui:ExcelWriteRange AddHeaders="False" sap2010:Annotation.AnnotationText="&quot;B3:C9&quot;" DataTable="[ReadDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="654,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_10" SheetName="Resource &amp; Project Details" StartingCell="B3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelWriteRange>
                <Assign sap:VirtualizedContainerService.HintSize="654,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[ColumnIndexsheet]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[ReadOrgDT.Columns.Count]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim dividend As Integer = columnNumber&#xA;Dim columnname As String = String.Empty&#xA;Dim modulo As Integer&#xA;&#xA;While dividend &gt; 0&#xA;modulo = (dividend - 1)Mod 26&#xA;columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;dividend = CInt((dividend - modulo)/26)&#xA;End While&#xA;&#xA;Console.WriteLine(columnName.ToString)&#xA;result=columnName" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="654,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                  <ui:InvokeCode.Arguments>
                    <OutArgument x:TypeArguments="x:String" x:Key="result">[ColumnNamesheet]</OutArgument>
                    <InArgument x:TypeArguments="x:Int32" x:Key="columnNumber">[ColumnIndexsheet]</InArgument>
                  </ui:InvokeCode.Arguments>
                </ui:InvokeCode>
                <ui:ExcelDeleteRange sap2010:Annotation.AnnotationText="&quot;CC3:CD9&quot;&#xA;&#xA;&quot;A1001:&quot;+chr(64+ReadOrgDT.Columns.Count).ToString+(ReadOrgDT.Rows.Count+1010).ToString" DisplayName="Delete Range" sap:VirtualizedContainerService.HintSize="654,22" sap2010:WorkflowViewState.IdRef="ExcelDeleteRange_2" Range="[&quot;A1001:&quot;+ColumnNamesheet.ToString+(ReadOrgDT.Rows.Count+1010).ToString]" SheetName="Resource &amp; Project Details" ShiftCells="False" ShiftOption="ShiftUp">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ExcelDeleteRange>
                <ui:ExcelReadRange AddHeaders="False" DataTable="[ReadExcelDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="654,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_11" Range="A1" SheetName="Resource &amp; Project Details" />
                <Assign sap:VirtualizedContainerService.HintSize="654,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">1</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="654,229" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                  <ui:CommentOut.Body>
                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_29">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_9" Text="[ReadExcelDT.Columns.Count]" />
                    </Sequence>
                  </ui:CommentOut.Body>
                </ui:CommentOut>
                <ui:InterruptibleWhile Condition="[i&lt;ReadExcelDT.Columns.Count]" DisplayName="While" sap:VirtualizedContainerService.HintSize="654,1072" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_3">
                  <ui:InterruptibleWhile.Body>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="618,907" sap2010:WorkflowViewState.IdRef="Sequence_32">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[ReadExcelDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="576,715" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="526,568" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="484,229" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_10" Text="[row.Item(i).ToString]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <If Condition="[row.Item(i).ToString.Contains(&quot;-214682&quot;)]" sap:VirtualizedContainerService.HintSize="484,207" sap2010:WorkflowViewState.IdRef="If_6">
                                <If.Then>
                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Object">[row.Item(i)]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </If.Then>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                      </ui:ForEachRow>
                      <Assign sap:VirtualizedContainerService.HintSize="576,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Int32">[i]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Int32">[i+1]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </ui:InterruptibleWhile.Body>
                </ui:InterruptibleWhile>
                <ui:ExcelWriteRange StartingCell="{x:Null}" AddHeaders="False" DataTable="[ReadExcelDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="654,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_11" SheetName="Resource &amp; Project Details" />
              </Sequence>
            </ActivityAction>
          </ui:ExcelApplicationScope.Body>
        </ui:ExcelApplicationScope>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,207</av:Point>
              <av:Size x:Key="ShapeSize">200,66</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,273 300,324.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Sequence sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_48">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="1531,5490" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000" WorkbookPath="[&quot;D:\Productivity Reports\&quot;+SheetName+&quot;\Resource and Project wise Monthly Sheet.xlsx&quot;]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence sap:VirtualizedContainerService.HintSize="1497,5381" sap2010:WorkflowViewState.IdRef="Sequence_47">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="1455,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[SheetName]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[((system.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(cint(Month))).Substring(0,3) +""+ Year.ToString.Substring(2,2)).ToUpper]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1455,609" sap2010:WorkflowViewState.IdRef="Sequence_36">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:BuildDataTable DataTable="[HeaderDT]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Resource&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Project&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Department&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Type_x0028_AMC_x002F_Ad-hoc_x002F_Billable_x002F_Non_x0020_Billable&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Hr&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Project_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Activity_x0020_Type&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
                      <ui:ExcelWriteRange AddHeaders="True" DataTable="[HeaderDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_12" SheetName="[SheetName]" StartingCell="A1" />
                      <ui:ExcelSetRangeColor Color="[color.Yellow]" DisplayName="Set Range Color" sap:VirtualizedContainerService.HintSize="436,22" sap2010:WorkflowViewState.IdRef="ExcelSetRangeColor_2" Range="A1:G1" SheetName="[SheetName]" />
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,229" sap2010:WorkflowViewState.IdRef="CommentOut_11">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_11" Text="[SheetName.ToString]" />
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                    </Sequence>
                    <Assign sap:VirtualizedContainerService.HintSize="1455,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[m]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ExcelReadRange AddHeaders="False" sap2010:Annotation.AnnotationText="&quot;B3:&quot;+chr(64+ReadExcelDT.Columns.Count-1).ToString+(ReadExcelDT.Rows.Count-1).ToString" DataTable="[ExcelDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1455,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_12" Range="A1" SheetName="Resource &amp; Project Details">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelReadRange>
                    <ui:RemoveDataRow Row="{x:Null}" DataTable="[ExcelDT]" DisplayName="Remove Data Row" sap:VirtualizedContainerService.HintSize="1455,22" sap2010:WorkflowViewState.IdRef="RemoveDataRow_3" RowIndex="0" />
                    <ui:RemoveDataColumn Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="[ExcelDT.Columns.Count-1]" DataTable="[ExcelDT]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="1455,22" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_2" />
                    <ui:RemoveDataRow Row="{x:Null}" DataTable="[ExcelDT]" DisplayName="Remove Data Row" sap:VirtualizedContainerService.HintSize="1455,22" sap2010:WorkflowViewState.IdRef="RemoveDataRow_4" RowIndex="[ExcelDT.Rows.Count-1]" />
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1455,257" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_51">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ExcelWriteRange AddHeaders="True" DataTable="[ExcelDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_13" SheetName="Sheet1" StartingCell="A1" />
                        </Sequence>
                      </ui:CommentOut.Body>
                    </ui:CommentOut>
                    <ui:InterruptibleWhile Condition="[m&lt;ExcelDT.Columns.Count-1]" DisplayName="While" sap:VirtualizedContainerService.HintSize="1455,2118" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_4">
                      <ui:InterruptibleWhile.Body>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="757,1953" sap2010:WorkflowViewState.IdRef="Sequence_42">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[ExcelDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="715,1761" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
                            <ui:ForEachRow.Body>
                              <ActivityAction x:TypeArguments="sd:DataRow">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                </ActivityAction.Argument>
                                <Sequence sap:VirtualizedContainerService.HintSize="665,1614" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="623,229" sap2010:WorkflowViewState.IdRef="CommentOut_13">
                                    <ui:CommentOut.Body>
                                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_12" Text="[row.Item(m).ToString]" />
                                      </Sequence>
                                    </ui:CommentOut.Body>
                                  </ui:CommentOut>
                                  <If Condition="[row.Item(m+1).ToString&lt;&gt;&quot;&quot; AND  row.Item(m+1).ToString.Length &lt; 6]" sap:VirtualizedContainerService.HintSize="623,1253" sap2010:WorkflowViewState.IdRef="If_7">
                                    <If.Then>
                                      <Sequence sap:VirtualizedContainerService.HintSize="478,1106" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExcelWriteCell Cell="[&quot;E&quot;+RowNo.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_15" SheetName="[SheetName]" Text="[row.Item(m+1).ToString]" />
                                        <ui:ExcelWriteCell Cell="[&quot;A&quot;+RowNo.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_16" SheetName="[SheetName]" Text="[row.Item(0).ToString]" />
                                        <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,229" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                                          <ui:CommentOut.Body>
                                            <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="MessageBox_13" Text="[&quot;='Resource &amp; Project Details'!&quot;+chr(64+(m+2)).ToString + &quot;2&quot;.ToString]" />
                                            </Sequence>
                                          </ui:CommentOut.Body>
                                        </ui:CommentOut>
                                        <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[ColumnIndexHr]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[m+2]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim dividend As Integer = columnNumber&#xA;Dim columnname As String = String.Empty&#xA;Dim modulo As Integer&#xA;&#xA;While dividend &gt; 0&#xA;modulo = (dividend - 1)Mod 26&#xA;columnName = Convert.ToChar(65 + modulo).ToString() &amp; columnName&#xA;dividend = CInt((dividend - modulo)/26)&#xA;End While&#xA;&#xA;Console.WriteLine(columnName.ToString)&#xA;result=columnName" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="436,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                                          <ui:InvokeCode.Arguments>
                                            <OutArgument x:TypeArguments="x:String" x:Key="result">[ColumnNameHr]</OutArgument>
                                            <InArgument x:TypeArguments="x:Int32" x:Key="columnNumber">[ColumnIndexHr]</InArgument>
                                          </ui:InvokeCode.Arguments>
                                        </ui:InvokeCode>
                                        <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="&quot;='Resource &amp; Project Details'!&quot;+chr(64+(m+2)).ToString + &quot;2&quot;.ToString" Cell="[&quot;B&quot;+RowNo.ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="436,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_17" SheetName="[SheetName]" Text="[&quot;='Resource &amp; Project Details'!&quot;+ColumnNameHr.ToString + &quot;2&quot;.ToString]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:ExcelWriteCell>
                                        <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[RowNo]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[RowNo+1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEachRow.Body>
                          </ui:ForEachRow>
                          <Assign sap:VirtualizedContainerService.HintSize="715,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">[m]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">[m+1]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ui:InterruptibleWhile.Body>
                    </ui:InterruptibleWhile>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[ReadSheetDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1455,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_13" SheetName="[SheetName]">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <Assign sap:VirtualizedContainerService.HintSize="1455,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[RowCounter]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">2</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[ReadSheetDT]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="1455,1213" sap2010:WorkflowViewState.IdRef="ForEachRow_6">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1405,1066" sap2010:WorkflowViewState.IdRef="Sequence_46">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If Condition="[row.Item(1).ToString.Contains(&quot;AMC&quot;)]" sap:VirtualizedContainerService.HintSize="1363,874" sap2010:WorkflowViewState.IdRef="If_10">
                              <If.Then>
                                <Sequence sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExcelWriteCell Cell="[&quot;D&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_18" SheetName="[SheetName]" Text="AMC" />
                                  <ui:ExcelWriteCell Cell="[&quot;F&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_19" SheetName="[SheetName]" Text="Software Services" />
                                  <ui:ExcelWriteCell Cell="[&quot;G&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_20" SheetName="[SheetName]" Text="Calibehr AMC" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <If Condition="[row.Item(1).ToString.Contains(&quot;Sprint&quot;)]" sap:VirtualizedContainerService.HintSize="942,727" sap2010:WorkflowViewState.IdRef="If_9">
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExcelWriteCell Cell="[&quot;D&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_21" SheetName="[SheetName]" Text="Billable" />
                                      <ui:ExcelWriteCell Cell="[&quot;F&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_22" SheetName="[SheetName]" Text="Product Development" />
                                      <ui:ExcelWriteCell Cell="[&quot;G&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_23" SheetName="[SheetName]" Text="Calibehr Billable" />
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <If Condition="[row.Item(1).ToString.Contains(&quot;Common Tasks&quot;) or row.Item(1).ToString.Contains(&quot;NON BILLABLE&quot;)]" sap:VirtualizedContainerService.HintSize="521,580" sap2010:WorkflowViewState.IdRef="If_8">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,433" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ExcelWriteCell Cell="[&quot;D&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_24" SheetName="[SheetName]" Text="Non-Billable" />
                                          <ui:ExcelWriteCell Cell="[&quot;F&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_25" SheetName="[SheetName]" Text="Software Services" />
                                          <ui:ExcelWriteCell Cell="[&quot;G&quot;+(RowCounter).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_26" SheetName="[SheetName]" Text="Calibehr Non Billable" />
                                        </Sequence>
                                      </If.Then>
                                    </If>
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                            <Assign sap:VirtualizedContainerService.HintSize="1363,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[RowCounter]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[RowCounter+1]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                    </ui:ForEachRow>
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[BeforSortDT]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="1455,59" sap2010:WorkflowViewState.IdRef="ExcelReadRange_14" SheetName="[SheetName]">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                    <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" ColumnName="Resource" DataTable="[BeforSortDT]" DisplayName="Sort Data Table" sap:VirtualizedContainerService.HintSize="1455,22" sap2010:WorkflowViewState.IdRef="SortDataTable_2" Order="Ascending" OutputDataTable="[AfterSortDT]" SortOrder="Ascending" />
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[AfterSortDT]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="1455,87" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_14" SheetName="[SheetName]" StartingCell="A1" />
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,324.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,375.5 300,424.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="Dear Sir,&#xA;&#xA;Please find Attachment of Resource and Project wise Monthly Sheet." DisplayName="Send Outlook Mail Message" sap:VirtualizedContainerService.HintSize="334,145" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="False" IsDraft="False" Subject="[&quot;Resource and Project wise Monthly Sheet &quot;+SheetName]" To="abhishek.sapalya@calibehr.com">
                <ui:SendOutlookMail.Files>
                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                    <InArgument x:TypeArguments="x:String">["D:\Productivity Reports\"+SheetName+"\Resource and Project wise Monthly Sheet.xlsx"]</InArgument>
                  </scg:List>
                </ui:SendOutlookMail.Files>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:SendOutlookMail>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,424.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="MessageBox_14" Text="[&quot;Done Complete Successfully&quot;]" />
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
  </Flowchart>
</Activity>